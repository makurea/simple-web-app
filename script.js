// –ò—Å–ø–æ–ª—å–∑—É–µ–º 'const' –¥–ª—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã
const loginForm = document.getElementById("loginForm");
const usernameInput = document.getElementById("username");
const passwordInput = document.getElementById("password");
const errorMessageElement = document.getElementById("error-message");
const loginButton = document.getElementById("loginButton");

// 1. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞)
const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

/**
 * 2. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç fetch/axios –∑–∞–ø—Ä–æ—Å.
 * @param {string} username - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} password - –ü–∞—Ä–æ–ª—å
 * @returns {Promise<boolean>} - –£—Å–ø–µ—à–Ω–∞ –ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
 */
async function authenticateUser(username, password) {
    await delay(1000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏

    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ "batman/batman" - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    return username === "batman" && password === "batman";
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
const restoreButton = () => {
    loginButton.disabled = false;
    loginButton.innerHTML = '<i class="fas fa-sign-in-alt" aria-hidden="true"></i> –í–æ–π—Ç–∏';
};

// 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
loginForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    // üöÄ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();

    if (!username || !password) {
        errorMessageElement.textContent = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è!";
        return;
    }

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
    errorMessageElement.textContent = "";

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
    loginButton.disabled = true;
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º 'aria-hidden' –¥–ª—è –∏–∫–æ–Ω–∫–∏, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
    loginButton.innerHTML = '<i class="fas fa-spinner fa-spin" aria-hidden="true"></i> –í—Ö–æ–¥...';

    try {
        const isAuthenticated = await authenticateUser(username, password);

        if (isAuthenticated) {
            // –£—Å–ø–µ—Ö
            localStorage.setItem("isLoggedIn", "true");
            loginButton.innerHTML = '<i class="fas fa-check" aria-hidden="true"></i> –£—Å–ø–µ—Ö!'; // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞

            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —É—Å–ø–µ—Ö–∞
            await delay(500);

            // –ó–∞–º–µ–Ω—è–µ–º hello.html –Ω–∞ anime.html, –∫–∞–∫ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
            window.location.href = "anime.html";
        } else {
            // –ù–µ—É–¥–∞—á–∞
            errorMessageElement.textContent = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å!";
            passwordInput.value = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–∞—Ä–æ–ª—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            restoreButton();
        }
    } catch (error) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:", error);
        errorMessageElement.textContent = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.";
        restoreButton();
    }
    // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: 'finally' –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ restoreButton –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ 'else' –∏ 'catch',
    // –∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç.
});